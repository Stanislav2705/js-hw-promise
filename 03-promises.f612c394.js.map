{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SACrCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAE3CF,EAAYM,iBAAiB,UAI7B,SAAkBC,GAGhB,GAFAA,EAAEC,iBAEEC,EACF,OAGF,IAAIC,EAAQC,OAAOR,EAAWS,OAC1BC,EAAOF,OAAOP,EAAUQ,OACxBE,EAASH,OAAON,EAAYO,OAEhCH,GAAW,EAEX,IAAK,IAAIM,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,EAAcD,EAAGL,GACdO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBtB,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAE9DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBtB,EAAAuB,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAE9DV,GAASG,EAGXa,YAAW,WACTjB,GAAW,IACVC,MA5BL,IAAID,GAAW,EA+Bf,SAASO,EAAcG,EAAUC,GAC/B,IAAMO,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BN,YAAW,WACLC,EACFI,EAAQ,CAAEZ,WAAUC,UAEpBY,EAAO,CAAEb,WAAUC,YAEpBA,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst formPromise = document.querySelector('.form');\nconst delayField = document.querySelector('[name=\"delay\"]');\nconst stepField = document.querySelector('[name=\"step\"]');\nconst amountField = document.querySelector('[name=\"amount\"]');\n\nformPromise.addEventListener('submit', onSubmit);\n\nlet isActive = false;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  if (isActive) {\n    return;\n  }\n\n  let delay = Number(delayField.value);\n  let step = Number(stepField.value);\n  let amount = Number(amountField.value);\n\n  isActive = true;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  setTimeout(() => {\n    isActive = false;\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formPromise","document","querySelector","$ce04d3a99e08e73b$var$delayField","$ce04d3a99e08e73b$var$stepField","$ce04d3a99e08e73b$var$amountField","addEventListener","e","preventDefault","$ce04d3a99e08e73b$var$isActive","delay1","Number","value","step","amount","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay","Notify","success","concat","catch","failure","setTimeout","shouldResolve","Math","random","Promise","resolve","reject"],"version":3,"file":"03-promises.f612c394.js.map"}